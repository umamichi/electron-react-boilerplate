import React, { Component } from 'react';
import { render } from 'react-dom';
import Server from '../server/Server';
import Osc from '../server/OSC';
import OscScene from '../server/OscScene';
import styles from './App.css';
import C from '../common/constants';
import moment from 'moment';
import playBgm from '../utils/playBgm';

export default class App extends Component {
  constructor(props) {
    super(props);
    
    this.handleQuit = this.handleQuit.bind(this);
    this.handleSendOSC = this.handleSendOSC.bind(this);
    this.playOsc = this.playOsc.bind(this);
    this.stopOsc = this.stopOsc.bind(this);
    this.setIsPlayState = this.setIsPlayState.bind(this);
    this.updateLogBox = this.updateLogBox.bind(this);
    this.calcCountdown = this.calcCountdown.bind(this);
    this.stopFirstWaitTimer = this.stopFirstWaitTimer.bind(this);
    
    this.state = {
      log: {
        text: `ÂàùÂõûËµ∑ÂãïÊôÇ${window.config.OSC_FIRST_WAIT_SECOND}ÁßíÂæÖÊ©ü‰∏≠`,
        restSecond: window.config.OSC_FIRST_WAIT_SECOND
      },
      isFirstWaiting: true, // ÂàùÂõûÂæÖÊ©ü‰∏≠„Åã„Å©„ÅÜ„Åã
      isPlay: false // „Ç∑„Éº„É≥Âàá„ÇäÊõø„Åà„Çø„Ç§„É†„É©„Ç§„É≥„ÅåÂÜçÁîü‰∏≠„Åã„Å©„ÅÜ„Åã
    };
  }

  componentWillMount() {
  }

  componentDidMount() {
    window.log.log('---- electron boot ----');
    
    playBgm(); // BGM ÂÜçÁîü
    
    this.server = new Server();
    this.server.start();
    
    this.osc = new Osc(); // osc
    this.oscScene = new OscScene(this.osc, this.updateLogBox); // osc„ÅßÈÄÅ„Çã„Ç∑„Éº„É≥
    
    // „Çø„Ç§„É†„É©„Ç§„É≥ÈñãÂßã
    this.playOsc(true);
  }

  /**
   * „Ç¢„Éó„É™ÁµÇ‰∫Ü
   */
  handleQuit() {
    window.ipcRenderer.send('app-quit');
  }
  /**
   * „É™„É≠„Éº„Éâ
   */
  reload() {
    location.reload();
  }

  /**
   * „Ç∑„Éº„É≥„ÇíÂàá„ÇäÊõø„Åà„Çã
   */
  playOsc(isFirstTime) {
    // ElectronËµ∑ÂãïÂæå„ÄÅ„Çµ„Ç§„Éç„Éº„Ç∏ÂÅ¥„Åå„Éá„Éº„Çø„Çí„É≠„Éº„Éâ„Åô„Çã„ÅÆ„ÇíÂçÅÂàÜ„Å´ÂæÖ„Å£„Å¶„Åã„Çâ„Ç∑„Éº„É≥Âàá„ÇäÊõø„ÅàÈñãÂßã
    if (isFirstTime) {
      this.calcCountdown(); // „Ç´„Ç¶„É≥„Éà„ÉÄ„Ç¶„É≥ÁßíÊï∞„ÇíÊõ¥Êñ∞
      console.log(`${window.config.OSC_FIRST_WAIT_SECOND}ÁßíÂæÖÊ©üÈñãÂßã --- `);
      this.firstWaitTimer = setTimeout(() => {
        console.log('------ „Ç∑„Éº„É≥Âàá„ÇäÊõø„ÅàÈñãÂßã ------');
        this.oscScene.play();
        this.setIsPlayState();
        this.setState({ isFirstWaiting: false });
      }, window.config.OSC_FIRST_WAIT_SECOND * 1000);
      return;
    }
    
    // ‰∏ÄÂ∫¶ÂÅúÊ≠¢„Åó„Åü„ÅÆ„Å°„ÄÅÂÜç„Å≥play„Éú„Çø„É≥„ÇíÊäº„Åó„ÅüÊôÇ
    this.oscScene.play();
    this.setIsPlayState();
    this.calcCountdown(); // „Ç´„Ç¶„É≥„Éà„ÉÄ„Ç¶„É≥ÁßíÊï∞„ÇíÊõ¥Êñ∞
  }
  /**
   * OSC„ÇíÂÅúÊ≠¢„Åô„Çã
   */
  stopOsc() {
    this.oscScene.stop();
    this.setIsPlayState();
    clearInterval(this.countdownTimer);
  }
  /**
   * „Éú„Çø„É≥„ÇíÊäº‰∏ãÊôÇ„ÄÅOSCÈÄÅ‰ø°
   */
  handleSendOSC(e) {
    let isNight = e.currentTarget.getAttribute('data-is-night');
    let sceneName = e.currentTarget.getAttribute('data-type');
    // send osc
    this.osc.send(this.oscScene.createData(sceneName, true, isNight));
  }
  
  /**
   * OSC„ÅåÂÜçÁîüÁä∂ÊÖã„Åã„Å©„ÅÜ„Åã
   */
  setIsPlayState() {
    this.setState({
      isPlay: this.oscScene.timeout !== null // Play‰∏≠„Åã„Å©„ÅÜ„Åã
    });
  }
  /**
   * ÁèæÂú®„ÅÆÁä∂ÊÖã„ÇíÊõ¥Êñ∞„Åô„Çã
   */
  updateLogBox(text, restSecond) {
    this.setState({
      log: {
        text,
        restSecond
      }
    });
  }
  /**
   * ÊÆã„ÇäÁßíÊï∞„Çí„Ç´„Ç¶„É≥„Éà„ÉÄ„Ç¶„É≥„Åô„Çã
   */
  calcCountdown() {
    this.countdownTimer = setInterval(() => {
      // ÊÆã„ÇäÁßíÊï∞ 0Êú™Ê∫Ä„Å´„Å™„Çâ„Å™„ÅÑ„Çà„ÅÜ„Å´„Åô„Çã
      const restSecond = (this.state.log.restSecond - 1) < 0 ? 0 : this.state.log.restSecond - 1;
      this.setState({
        log: {
          text: this.state.log.text,
          restSecond
        }
      });
    }, 1000);
  }
  
  /**
   * ÂàùÂõûÂæÖÊ©ü„ÇíËß£Èô§„Åô„Çã
   */
  stopFirstWaitTimer() {
    clearTimeout(this.firstWaitTimer);
    clearInterval(this.countdownTimer);
    this.setState({
      isFirstWaiting: false
    });
  }
  
  render() {
    return (
      <div className="page">
        <button className={styles.quitButton} onClick={this.handleQuit}>„Çµ„Éº„Éê„Éº„Ç¢„Éó„É™ÁµÇ‰∫Ü</button>
        <button className={styles.quitButton} onClick={this.reload}>„É™„É≠„Éº„ÉâüîÉ</button>
        <br />
        
        <h1>„Çø„Ç§„É†„É©„Ç§„É≥</h1>
        <div className={styles.logDiv}>
          {this.state.log.text}
          <div className={styles.restSecond}>ÊÆã„Çä{this.state.log.restSecond}Áßí</div>
        </div>
        
        {(() => {
          if (this.state.isFirstWaiting) {
            return (
              <div>
                <button className={styles.oscButton} onClick={this.stopFirstWaitTimer}>ÂàùÂõûÂæÖÊ©ü STOP‚ñ†</button>
              </div>
            );
          }
          if (this.state.isPlay) {
            return (
              <div>
                <button className={styles.oscButton} style={{ 'opacity': 0.5 }}>PLAY‚ñ∂</button>
                <button className={styles.oscButton} onClick={this.stopOsc}>STOP‚ñ†</button> 
              </div>
            );
          }
          return (
            <div>
              <button className={styles.oscButton} onClick={this.playOsc.bind(this, false)}>PLAY‚ñ∂</button>
              <button className={styles.oscButton} style={{ 'opacity': 0.5 }}>STOP‚ñ†</button> 
            </div>
          );
        })()}
        
        <br /><br />
        
        <h1>„Ç∑„Éº„É≥Âàá„ÇäÊõø„ÅàÔºàOSCÔºâ„É¢„ÉÉ„ÇØ <br /> PORT: {window.config.OSC_PORT_NUM} </h1>
        <button className={styles.oscButton} onClick={this.handleSendOSC} data-type={C.GUIDANCE.NAME} data-is-night="false">
          1. {C.GUIDANCE.J_NAME} {window.config.SCENE_SECOND.GUIDANCE}Áßí</button>
        <br />
        <button className={styles.oscButton} onClick={this.handleSendOSC} data-type={C.INTERACTIVE.NAME} data-is-night="false">
          2. {C.INTERACTIVE.J_NAME}(Êòº) {window.config.SCENE_SECOND.INTERACTIVE}Áßí</button>
        <button className={styles.oscButton} onClick={this.handleSendOSC} data-type={C.INTERACTIVE.NAME} data-is-night="true">
          2. {C.INTERACTIVE.J_NAME}(Â§ú) {window.config.SCENE_SECOND.INTERACTIVE}Áßí</button>
        <br />
        <button className={styles.oscButton} style={{ marginLeft: 20, width: '280px' }} onClick={this.handleSendOSC} data-type={C.INTERACTIVE_PLACE.NAME} data-is-night="false">
          2-1. {C.INTERACTIVE_PLACE.J_NAME} {window.config.SCENE_SECOND.INTERACTIVE_PLACE}Áßí</button>
        <br />
        <button className={styles.oscButton} style={{ marginLeft: 20, width: '280px' }} onClick={this.handleSendOSC} data-type={C.INTERACTIVE_TRAFFIC.NAME} data-is-night="false">
          2-2. {C.INTERACTIVE_TRAFFIC.J_NAME} {window.config.SCENE_SECOND.INTERACTIVE_TRAFFIC}Áßí</button>
        <br />
        <button className={styles.oscButton} style={{ marginLeft: 20, width: '280px' }} onClick={this.handleSendOSC} data-type={C.INTERACTIVE_NATURE.NAME} data-is-night="false">
          2-3. {C.INTERACTIVE_NATURE.J_NAME} {window.config.SCENE_SECOND.INTERACTIVE_NATURE}Áßí</button>
        <br />
        <button className={styles.oscButton} style={{ marginLeft: 20, width: '280px' }} onClick={this.handleSendOSC} data-type={C.INTERACTIVE_COUNTDOWN.NAME} data-is-night="false">
          2-4. {C.INTERACTIVE_COUNTDOWN.J_NAME} {window.config.SCENE_SECOND.INTERACTIVE_COUNTDOWN}Áßí</button>
        <br />
        <button className={styles.oscButton} onClick={this.handleSendOSC} data-type={C.UNIVERSAL_INTRODUCTION.NAME} data-is-night="false">
          3. {C.UNIVERSAL_INTRODUCTION.J_NAME} {window.config.SCENE_SECOND.UNIVERSAL_INTRODUCTION}Áßí</button>
        <br />
        <button className={styles.oscButton} onClick={this.handleSendOSC} data-type={C.UNIVERSAL_PANORAMA.NAME} data-is-night="false">
          4-1. {C.UNIVERSAL_PANORAMA.J_NAME} {window.config.SCENE_SECOND.UNIVERSAL_PANORAMA}Áßí</button>
        <br />
        <button className={styles.oscButton} onClick={this.handleSendOSC} data-type={C.UNIVERSAL_24HR.NAME} data-is-night="false">
          4-2. {C.UNIVERSAL_24HR.J_NAME} {window.config.SCENE_SECOND.UNIVERSAL_24HR}Áßí</button>
        <br />
        <button className={styles.oscButton} onClick={this.handleSendOSC} data-type={C.UNIVERSAL_FW.NAME} data-is-night="false">
          4-3. {C.UNIVERSAL_FW.J_NAME} {window.config.SCENE_SECOND.UNIVERSAL_FW}Áßí</button>
      </div>
    );
  }
}